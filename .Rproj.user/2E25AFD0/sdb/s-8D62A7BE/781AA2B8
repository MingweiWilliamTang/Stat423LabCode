{
    "contents" : "rm(list=ls())\nlibrary(alr4)\nBGSgirls\nhead(BGSgirls)\n\n# simple linear regression on Soma \n# predictor WT18\n# response Soma\n\nn=dim(BGSgirls)[1]\nn\nx = BGSgirls$WT18\nY = BGSgirls$Soma\nplot(x,Y,xlab = \"WT18\", ylab = \"Y\")\n\nlm.SLR = lm(Y~x)\nabline(lm.SLR)\n\n###########################################################\n# calculate the estmate of coeffient \n# and covariance estimate using matrix algebra\n\n# X denote the data matrix\nX = cbind(rep(1,n),x)\nclass(X)\n\n# t() transpose a matrix\ndim(X)\n\ndim(t(X))\n\n# %*% matrix product \nt(X) * X\n\nt(X) %*% X\n# solve() solve a linear equation system. can be used to inverse a matrix\n# calculate the coefficient\n\n\nbeta = solve(t(X) %*% X) %*% t(X) %*% Y\nbeta\n\nlm.SLR$coefficients\n\n# calculate fitted value using matrix algebra\n\nY.fitted = X %*% beta\nY.fitted\n\n\nH = X %*% solve(t(X) %*% X) %*% t(X)\n# H is called hat matrix \n\nH\n\nall.equal(H %*% H,H)\nI = diag(rep(1,n))\nI - H\n(I - H) %*% (I - H)\nI-H\nH %*% (I - H)\nY.fitted2 = H %*% Y\n\nall.equal(Y.fitted,Y.fitted2)\n\n# calculate RSS and sigma^2\nRSS = sum((Y - Y.fitted)^2)\nRSS\nRSS2 = t(Y) %*% (I-H) %*% Y\nRSS2\n\nsigma2 = RSS / (n-2)\nsigma = sqrt(sigma2)\n  # calculate covariance matrix of beta\nbeta.cov = solve(t(X) %*% X) * sigma2\nbeta.cov\n\n# compare with the output for lm\nvcov(lm.SLR)\n\n############################################\n# confidence interval and prediction interval \nalpha = 0.05\nx.bar = mean(x)\nSXX = (n-1) * var(x)\n# CI\npar(mfrow=c(1,1))\nplot(x,Y,xlab = \"WT18\", ylab = \"soma\",xlim=c(40,100),ylim=c(2,8))\n\n# for any point x*, calculate the confidence interval \nx.star = seq(40,100,length.out = 50)\n\nX.star = cbind(rep(1,50),x.star) \nX.star\ny.star = X.star %*% beta \ny.star\nCI.upper = y.star + sqrt(1/n + (x.star-x.bar)^2 / SXX ) * qt(1-alpha/2,n-2) * sigma\nCI.lower = y.star - sqrt(1/n + (x.star-x.bar)^2 / SXX ) * qt(1-alpha/2,n-2) * sigma\n\nlines(x.star,y.star,col=\"red\",lwd=2)\nlines(x.star,CI.upper,lty=2,col=\"red\",lwd=1)\nlines(x.star,CI.lower,lty=2,col=\"red\",lwd=1)\n\n# PI\nPI.upper = y.star + sqrt(1 + 1/n + (x.star-x.bar)^2 / SXX ) * qt(1-alpha/2,n-2) * sigma\nPI.lower = y.star - sqrt(1 + 1/n + (x.star-x.bar)^2 / SXX ) * qt(1-alpha/2,n-2) * sigma\n\nlines(x.star,PI.upper,lty=2,col=\"blue\",lwd=2)\nlines(x.star,PI.lower,lty=2,col=\"blue\",lwd=2)\n\nlegend(\"bottomright\", legend = c(\"CI\",\"PI\"),col = c(\"red\",\"blue\"),lty=2,lwd=2)\n\n##################################################\n# add variable plot\n# use two predictors WT18 HT18\nx1 = BGSgirls$WT18\nx2 = BGSgirls$HT18\nY = BGSgirls$Soma\n# paired scatter plot\npairs(data.frame(WT18=x1,HT18=x2,Soma=Y))\n\nlm.MLR2 = lm(Y ~ x1 + x2)\nsummary(lm.MLR2)\n\npar(mfrow=c(1,2))\nplot(x1,Y,xlab = \"WT18\", ylab = \"soma\")\nlm.Y.x1 = lm(Y ~ x1)\nabline(lm.Y.x1)\n\nlm.x2.x1 = lm(x2 ~ x1)\nplot(x1,x2,xlab = \"HT18\", ylab = \"WT18\")\nabline(lm.x2.x1)\n\n# regression using the residual in the first model and residual in the second model\nlm.x2.adjust = lm(lm.Y.x1$residuals~ lm.x2.x1$residuals)\nplot(lm.Y.x1$residuals,lm.x2.x1$residuals)\nabline(lm.x2.adjust)\n# ?? how to intepret the model \n\n## Multiple regression model \nlm.x1.x2 = lm(Y ~ x1 + x2)\n\nsummary(lm.x1.x2)\n\n# compare with added model\nlm.x1.x2.summ = summary(lm.x1.x2)\nlm.x2.adjust.summ = summary(lm.x2.adjust)\nlm.x1.x2.summ$coefficients[3,]\nlm.x2.adjust.summ$coefficients[2,]\n\n# compare sigma\nlm.x1.x2.summ$sigma\nlm.x1.adjust.summ$sigma\n\n# compare RSS\nsum(lm.x2.adjust$residuals^2)\nsum(lm.x1.x2$residuals^2)\n\n# the different is in sigma from the two model\nlm.x1.x2.summ$coefficients[3,2] / lm.x1.x2.summ$sigma\nlm.x2.adjust.summ$coefficients[2,2] / lm.x2.adjust.summ$sigma\n\n\n##########################################\n# derive multiple regression formula based on matrix algebra\nX = cbind(rep(1,n),x1,x2)\nbeta = solve(t(X) %*% X) %*% t(X) %*% Y\nlm.x1.x2\n\nRSS.x1.x2 = sum((Y - X %*% beta)^2)\nsigma.x1.x2 = RSS.x1.x2/(n-3)\n",
    "created" : 1453935671881.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4093747099",
    "id" : "781AA2B8",
    "lastKnownWriteTime" : 1453936827,
    "path" : "~/Dropbox/423/423codes/lab4.R",
    "project_path" : "lab4.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}