abline(beta.0.hat.Anscombe.2,beta.1.hat.Anscombe.2,lwd=2,col="blue")
### overhead II-75 ... Anscombe's third data set
with(anscombe,plot(y3))  # to figure out index of separated point
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,points(x3[3],y3[3],pch=20,col="red"))
### overhead II-76 ... Anscombe's fourth data set
with(anscombe,plot(x4))  # to figure out index of separated point
with(anscombe,plot(x4,y4,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.4,beta.1.hat.Anscombe.4,lwd=2,col="blue")
with(anscombe,points(x4[8],y4[8],pch=20,col="red"))
### overhead II-78 ... residuals vs. fitted values, data set #1
fitted.Anscombe.1 <- with(anscombe,beta.0.hat.Anscombe.1 + beta.1.hat.Anscombe.1*x1)
residuals.Anscombe.1 <- with(anscombe,y1 - fitted.Anscombe.1)
with(anscombe,plot(fitted.Anscombe.1,residuals.Anscombe.1,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x3,residuals.Anscombe.3,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
library(alr4)
Forbes
BGSgirls
head(Forbes)
with(Forbes,plot(pres,bp))
with(Forbes,plot(pres,lpres))
head(BGSgirls)
with(BGSgirls),plot(HT2,HT18))
with(BGSgirls,plot(HT2,HT18))
lm.BGS = lm(HT18~HT2,data = BGSgirls)
lm.BGS
lm.BGS$coefficients
coef(lm.BGS)
coefficients(lm.BGS)
coefficients(lm.BGS)
resid(lm.BGS)
lm.BGS$residuals
lm.BGS$residuals
fitted(lm.BGS)
lm.BGS$fitted.values
fitted.values(lm.BGS)
plot(lm.BGS)
par(mfrow=c(2,2))
par(mfrow=c(2,2))
plot(lm.BGS)
plot(lm.BGS)
plot(lm.BGS,mgp=c(2,1,0.5))
plot(lm.BGS,mgp=c(2,1,0.5),mar=c(0,0,0,0))
plot(lm.BGS)
plot(lm.BGS,mgp=c(2,1,0.5),mar=c(0,0,0,0))
plot(lm.BGS)
plot(lm.BGS,mgp=c(2,1,0.5),mar=c(0,0,0,0))
par(mar=c(0.5, 0.5, 0.2, 0.2), mfrow=c(1,2),
oma = c(4, 4, 0.2, 0.2))
par(mar=c(0.5, 0.5, 0.2, 0.2), mfrow=c(2,2),
oma = c(4, 4, 0.2, 0.2))
plot(lm.BGS)
with(BGSgirls,plot(HT2,HT18,pch=20,cex=1))
par(mfrow=c(1,1))
with(BGSgirls,plot(HT2,HT18,pch=20,cex=1))
par(mfrow=c(1,1),mar=c(2,2,1,1))
with(BGSgirls,plot(HT2,HT18,pch=20,cex=1))
par(mfrow=c(1,1),mar=c(0.5,0.5,0.5,0.2))
with(BGSgirls,plot(HT2,HT18,pch=20,cex=1))
par(mfrow=c(1,1),mar=c(0.5,0.5,1,0.2))
with(BGSgirls,plot(HT2,HT18,pch=20,cex=1))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1))
par(mar=c(0.5, 0.5, 0.2, 0.2), mfrow=c(2,2),
oma = c(2, 2, 0.2, 0.2))
plot(lm.BGS)
#residual plot
par(mfrow=c(1,1),mar=c(0.5,0.5,1,0.2))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1))
# simulation example
par(mfrow=c(1,1),mar=c(3,3,1,1),oma=c(2,2,2,2))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
par(mfrow=c(1,1),mar=c(4,4,2,1),oma=c(0,0,5,0))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
par(mfrow=c(1,1),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
par(mfrow=c(1,1),mar=c(4,4,2,1),oma=c(0,0,1,0))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
abline(h=0, lty=2)
qqnorm(resid(lm.BGS))
qqline()
qqline(resid(lm.BGS))
sum.BGS = summary(lm.BGS)
sum.BGS
sum.BGS$residuals
fitted(sum.BGS)
sum.BGS$coefficients
sum.BGS$coefficients[,1]
beta = sum.BGS$coefficients[,1]
BGS.fitted = beta[0] + beta[1] * x
BGS.fitted = beta[0] + beta[1] * BGSgirls$HT2
vcov(lm.BGS)
beta/sum.BGS$coefficients[,2]
df = sum.BGS$df
BGS.p = 2 * (1 - pt(abs(BGS.p),df))
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
BGS.t = beta/sum.BGS$coefficients[,2]
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
sum.BGS
BGS.t = beta/sum.BGS$coefficients[,2]
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
BGS.p
BGS.t
BGS.t
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
BGS.p
df
lm.BGS$df.residual
df = lm.BGS$df.residual
BGS.t = beta/sum.BGS$coefficients[,2]
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
BGS.p
sum.BGS$sigma
sqrt(sum(sum.BGS$residuals^2)/df)
with(BGSgirls,plot(HT2,HT18,pch=20))
abline(lm.BGS)
predict(lm.BGS,newdata=84)
predict(lm.BGS,newdata=c(84))
predict(lm.BGS,newdata=c(84,93,96))
predict(lm.BGS)
all.equal(predict(lm.BGS),fitted(lm.BGS))
predict(lm.BGS,newdata=data.frame(HT2=84))
predict(lm.BGS,newdata=data.frame(HT2=c(84,94,96))
predict(lm.BGS,newdata=data.frame(HT2=c(84,94,96)))
anscombe
with(anscombe,plot(x1,y1,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.1,beta.1.hat.Anscombe.1,lwd=2,col="blue")
with(anscombe,plot(x2,y2,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.2,beta.1.hat.Anscombe.2,lwd=2,col="blue")
with(anscombe,plot(y3))  # to figure out index of separated point
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,points(x3[3],y3[3],pch=20,col="red"))
with(anscombe,plot(x4))  # to figure out index of separated point
with(anscombe,plot(x4,y4,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.4,beta.1.hat.Anscombe.4,lwd=2,col="blue")
with(anscombe,points(x4[8],y4[8],pch=20,col="red"))
fitted.Anscombe.1 <- with(anscombe,beta.0.hat.Anscombe.1 + beta.1.hat.Anscombe.1*x1)
residuals.Anscombe.1 <- with(anscombe,y1 - fitted.Anscombe.1)
with(anscombe,plot(fitted.Anscombe.1,residuals.Anscombe.1,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-79 ... residuals vs. predictors, data set #1
with(anscombe,plot(x1,residuals.Anscombe.1,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-80 ... residuals vs. fitted values, data set #2
fitted.Anscombe.2 <- with(anscombe,beta.0.hat.Anscombe.2 + beta.1.hat.Anscombe.2*x2)
residuals.Anscombe.2 <- with(anscombe,y2 - fitted.Anscombe.2)
with(anscombe,plot(fitted.Anscombe.2,residuals.Anscombe.2,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-81 ... residuals vs. predictors, data set #2
with(anscombe,plot(x2,residuals.Anscombe.2,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-82 ... residuals vs. fitted values, data set #3
fitted.Anscombe.3 <- with(anscombe,beta.0.hat.Anscombe.3 + beta.1.hat.Anscombe.3*x3)
residuals.Anscombe.3 <- with(anscombe,y3 - fitted.Anscombe.3)
with(anscombe,plot(fitted.Anscombe.3,residuals.Anscombe.3,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-83 ... residuals vs. predictors, data set #3
with(anscombe,plot(x3,residuals.Anscombe.3,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-84 ... residuals vs. fitted values, data set #4
fitted.Anscombe.4 <- with(anscombe,beta.0.hat.Anscombe.4 + beta.1.hat.Anscombe.4*x4)
residuals.Anscombe.4 <- with(anscombe,y4 - fitted.Anscombe.4)
with(anscombe,plot(fitted.Anscombe.4,residuals.Anscombe.4,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x1,y1,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.1,beta.1.hat.Anscombe.1,lwd=2,col="blue")
with(anscombe,plot(x2,y2,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.2,beta.1.hat.Anscombe.2,lwd=2,col="blue")
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,plot(x1,residuals.Anscombe.1,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
fitted.Anscombe.2 <- with(anscombe,beta.0.hat.Anscombe.2 + beta.1.hat.Anscombe.2*x2)
residuals.Anscombe.2 <- with(anscombe,y2 - fitted.Anscombe.2)
with(anscombe,plot(fitted.Anscombe.2,residuals.Anscombe.2,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x3,residuals.Anscombe.3,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
fitted.Anscombe.4 <- with(anscombe,beta.0.hat.Anscombe.4 + beta.1.hat.Anscombe.4*x4)
residuals.Anscombe.4 <- with(anscombe,y4 - fitted.Anscombe.4)
with(anscombe,plot(fitted.Anscombe.4,residuals.Anscombe.4,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x4,residuals.Anscombe.4,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x1,fitted.Anscombe.1,xlab="Predictors", ylab="Fitted values",col="blue"))
with(anscombe,abline(lm(fitted.Anscombe.1~x1),lwd=2))
with(anscombe,plot(x2,fitted.Anscombe.2,xlab="Predictors", ylab="Fitted values",col="blue"))
with(anscombe,abline(lm(fitted.Anscombe.2~x2),lwd=2))
with(anscombe,plot(x3,fitted.Anscombe.3,xlab="Predictors", ylab="Fitted values",col="blue"))
with(anscombe,abline(lm(fitted.Anscombe.3~x3),lwd=2))
with(anscombe,plot(x4,fitted.Anscombe.4,xlab="Predictors", ylab="Fitted values",col="blue"))
with(anscombe,abline(lm(fitted.Anscombe.4~x4),lwd=2))
### overhead II-87 ... residuals vs. case numbers, data set #1
with(anscombe,plot(1:n.Anscombe,residuals.Anscombe.1,xlab="Case numbers", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-88 ... residuals vs. case numbers, data set #2
with(anscombe,plot(1:n.Anscombe,residuals.Anscombe.2,xlab="Case numbers", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-89 ... residuals vs. case numbers, data set #3
with(anscombe,plot(1:n.Anscombe,residuals.Anscombe.3,xlab="Case numbers", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
### overhead II-90 ... residuals vs. case numbers, data set #3
with(anscombe,plot(1:n.Anscombe,residuals.Anscombe.4,xlab="Case numbers", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
##########################
# simulation example
tb1 = read.table("C:/Users/Mingwei/Downloads/measure_hierarchy_8Jmap_matrix.csv")
tb1
tb1 = read.table("C:/Users/Mingwei/Downloads/measure_hierarchy_8Jmap_matrix.csv",sep=",")
tb1
apply(tb1,2,mean)
tb2 = read.table("C:/Users/Mingwei/Downloads/time_measure_8Rnomap_matrix.csv",sep = ",")
apply(tb2,2,mean)
library(alr4)
BGSgirls
head(BGSgirls)
with(BGSgirls,plot(HT2,HT18))
lm.BGS = lm(HT18~HT2,data = BGSgirls)
lm.BGS
lm.BGS$coefficients
coef(lm.BGS)
coefficients(lm.BGS)
vcov(lm.BGS)
lm.BGS$residuals
resid(lm.BGS)
lm.BGS$residuals
resid(lm.BGS)
lm.BGS$fitted.values
lm.BGS$fitted.values
fitted(lm.BGS)
fitted.values(lm.BGS)
plot(lm.BGS)
par(mfrow=c(2,2))
plot(lm.BGS)
plot(lm.BGS,mgp=c(2,1,0.5))
plot(lm.BGS)
plot(lm.BGS,mgp=c(2,1,0.5))
par(mar=c(0.5, 0.5, 0.2, 0.2), mfrow=c(2,2),
oma = c(2, 2, 0.2, 0.2))
plot(lm.BGS)
par(mfrow=c(1,1),mar=c(4,4,2,1),oma=c(0,0,1,0))
with(lm.BGS,plot(fitted.values,residuals,pch=20,cex=1,xlab="fitted",ylab="residual"))
abline(h=0, lty=2)
qqnorm(resid(lm.BGS))
qqline(resid(lm.BGS))
sum.BGS = summary(lm.BGS)
sum.BGS
sum.BGS$residuals
sum.BGS$coefficients
beta = sum.BGS$coefficients[,1]
sum.BGS
BGS.t = beta/sum.BGS$coefficients[,2]
BGS.t
BGS.p = 2 * (1 - pt(abs(BGS.t),df))
BGS.p
sqrt(sum(sum.BGS$residuals^2)/df)
sum.BGS$sigma
with(BGSgirls,plot(HT2,HT18,pch=20))
abline(lm.BGS)
predict(lm.BGS)
all.equal(predict(lm.BGS),fitted(lm.BGS))
predict(lm.BGS,newdata=84) # wrong?
predict(lm.BGS,newdata=c(84,93,96)) # wrong?
predict(lm.BGS,newdata=data.frame(HT2=84))
predict(lm.BGS,newdata=data.frame(HT2=c(84,94,96)))
(n.Anscombe <- with(anscombe,length(x1)))  # 11
x.bar.Anscombe.1 <- with(anscombe,mean(x1))
y.bar.Anscombe.1 <- with(anscombe,mean(y1))
SXX.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*var(x1))
SYY.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*var(y1))
SXY.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*cov(x1,y1))
x.bar.Anscombe.2 <- with(anscombe,mean(x2))
y.bar.Anscombe.2 <- with(anscombe,mean(y2))
SXX.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*var(x2))
SYY.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*var(y2))
SXY.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*cov(x2,y2))
x.bar.Anscombe.3 <- with(anscombe,mean(x3))
y.bar.Anscombe.3 <- with(anscombe,mean(y3))
SXX.Anscombe.3 <- with(anscombe,(n.Anscombe-1)*var(x3))
x.bar.Anscombe.1 <- with(anscombe,mean(x1))
y.bar.Anscombe.1 <- with(anscombe,mean(y1))
SXX.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*var(x1))
SYY.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*var(y1))
SXY.Anscombe.1 <- with(anscombe,(n.Anscombe-1)*cov(x1,y1))
x.bar.Anscombe.2 <- with(anscombe,mean(x2))
y.bar.Anscombe.2 <- with(anscombe,mean(y2))
SXX.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*var(x2))
SYY.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*var(y2))
SXY.Anscombe.2 <- with(anscombe,(n.Anscombe-1)*cov(x2,y2))
x.bar.Anscombe.3 <- with(anscombe,mean(x3))
y.bar.Anscombe.3 <- with(anscombe,mean(y3))
SXX.Anscombe.3 <- with(anscombe,(n.Anscombe-1)*var(x3))
SYY.Anscombe.3 <- with(anscombe,(n.Anscombe-1)*var(y3))
SXY.Anscombe.3 <- with(anscombe,(n.Anscombe-1)*cov(x3,y3))
x.bar.Anscombe.4 <- with(anscombe,mean(x4))
y.bar.Anscombe.4 <- with(anscombe,mean(y4))
SXX.Anscombe.4 <- with(anscombe,(n.Anscombe-1)*var(x4))
SYY.Anscombe.4 <- with(anscombe,(n.Anscombe-1)*var(y4))
SXY.Anscombe.4 <- with(anscombe,(n.Anscombe-1)*cov(x4,y4))
all.equal(x.bar.Anscombe.1,x.bar.Anscombe.2)  # TRUE
all.equal(x.bar.Anscombe.2,x.bar.Anscombe.3)  # TRUE
all.equal(x.bar.Anscombe.3,x.bar.Anscombe.4)  # TRUE
all.equal(y.bar.Anscombe.1,y.bar.Anscombe.2)  # TRUE
all.equal(y.bar.Anscombe.2,y.bar.Anscombe.4)  # TRUE
all.equal(y.bar.Anscombe.2,y.bar.Anscombe.3)  # "Mean relative difference: 0.0001211974"
y.bar.Anscombe.2  # 7.500909
y.bar.Anscombe.3  # 7.5
(beta.1.hat.Anscombe.1 <- SXY.Anscombe.1/SXX.Anscombe.1)  # 0.5000909
(beta.1.hat.Anscombe.2 <- SXY.Anscombe.2/SXX.Anscombe.2)  # 0.5
(beta.1.hat.Anscombe.3 <- SXY.Anscombe.3/SXX.Anscombe.3)  # 0.4997273
(beta.1.hat.Anscombe.4 <- SXY.Anscombe.4/SXX.Anscombe.4)  # 0.4999091
(beta.0.hat.Anscombe.1 <- y.bar.Anscombe.1 - beta.1.hat.Anscombe.1*x.bar.Anscombe.1)  # 3.000091
(beta.0.hat.Anscombe.2 <- y.bar.Anscombe.2 - beta.1.hat.Anscombe.2*x.bar.Anscombe.2)  # 3.000909
(beta.0.hat.Anscombe.3 <- y.bar.Anscombe.3 - beta.1.hat.Anscombe.3*x.bar.Anscombe.3)  # 3.002455
(beta.0.hat.Anscombe.4 <- y.bar.Anscombe.4 - beta.1.hat.Anscombe.4*x.bar.Anscombe.4)  # 3.001727
with(anscombe,plot(x1,y1,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.1,beta.1.hat.Anscombe.1,lwd=2,col="blue")
with(anscombe,plot(x2,y2,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.2,beta.1.hat.Anscombe.2,lwd=2,col="blue")
with(anscombe,plot(y3))  # to figure out index of separated point
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,points(x3[3],y3[3],pch=20,col="red"))
with(anscombe,plot(x4))  # to figure out index of separated point
with(anscombe,plot(x4,y4,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.4,beta.1.hat.Anscombe.4,lwd=2,col="blue")
with(anscombe,plot(x4))  # to figure out index of separated point
with(anscombe,plot(x4,y4,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.4,beta.1.hat.Anscombe.4,lwd=2,col="blue")
with(anscombe,plot(x1,y1,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.1,beta.1.hat.Anscombe.1,lwd=2,col="blue")
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,plot(x1,y1,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.1,beta.1.hat.Anscombe.1,lwd=2,col="blue")
with(anscombe,plot(x2,y2,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.2,beta.1.hat.Anscombe.2,lwd=2,col="blue")
with(anscombe,plot(x3,y3,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.3,beta.1.hat.Anscombe.3,lwd=2,col="blue")
with(anscombe,plot(x4))  # to figure out index of separated point
with(anscombe,plot(x4,y4,xlim=c(3,20),ylim=c(2,14),xlab="Predictor", ylab="Response",col="blue"))
abline(beta.0.hat.Anscombe.4,beta.1.hat.Anscombe.4,lwd=2,col="blue")
fitted.Anscombe.1 <- with(anscombe,beta.0.hat.Anscombe.1 + beta.1.hat.Anscombe.1*x1)
residuals.Anscombe.1 <- with(anscombe,y1 - fitted.Anscombe.1)
with(anscombe,plot(fitted.Anscombe.1,residuals.Anscombe.1,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
fitted.Anscombe.2 <- with(anscombe,beta.0.hat.Anscombe.2 + beta.1.hat.Anscombe.2*x2)
residuals.Anscombe.2 <- with(anscombe,y2 - fitted.Anscombe.2)
fitted.Anscombe.2 <- with(anscombe,beta.0.hat.Anscombe.2 + beta.1.hat.Anscombe.2*x2)
residuals.Anscombe.2 <- with(anscombe,y2 - fitted.Anscombe.2)
with(anscombe,plot(fitted.Anscombe.2,residuals.Anscombe.2,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x2,residuals.Anscombe.2,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
fitted.Anscombe.3 <- with(anscombe,beta.0.hat.Anscombe.3 + beta.1.hat.Anscombe.3*x3)
residuals.Anscombe.3 <- with(anscombe,y3 - fitted.Anscombe.3)
with(anscombe,plot(fitted.Anscombe.3,residuals.Anscombe.3,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
with(anscombe,plot(x3,residuals.Anscombe.3,xlab="Predictors", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
fitted.Anscombe.4 <- with(anscombe,beta.0.hat.Anscombe.4 + beta.1.hat.Anscombe.4*x4)
residuals.Anscombe.4 <- with(anscombe,y4 - fitted.Anscombe.4)
with(anscombe,plot(fitted.Anscombe.4,residuals.Anscombe.4,xlab="Fitted values", ylab="Residuals",col="blue"))
abline(h=0,lty="dashed")
library(alr4)
pairs(~ WT18 + HT18 + LG18 + Soma, data=BGSgirls, col="blue")
scatterplotMatrix(BGSgirls[,c("WT18","HT18","LG18","Soma")])  # one way ...
str(BGSgirls)  # figure which columns correspond to which variables ...
scatterplotMatrix(BGSgirls[,c(7,8,9,12)])  # .. another way
### overhead III-49 ... calculation of sample covariance matrix
(n.BGSgirls <- nrow(BGSgirls))  # 70
round(cal.C.BGSgirls <- cov(BGSgirls[,c(7,8,9,12)]), 3)
### overhead III-51 ... calculation of sample correlation matrix
round(cor(BGSgirls[,c(7,8,9,12)]),4)
round((n.BGSgirls-1)*cal.C.BGSgirls, 2)
### overhead III-52 ... calculation of inverse of X'X
cal.X.prime.cal.X.BGSgirls <- (n.BGSgirls-1) * cal.C.BGSgirls[1:3,1:3]
### inverse of matrix
round(cal.X.prime.cal.X.inv.BGSgirls <- solve(cal.X.prime.cal.X.BGSgirls), 7)
X.BGSgirls <- as.matrix(cbind(rep(1, n.BGSgirls), BGSgirls[,c("WT18","HT18","LG18")]))
colnames(X.BGSgirls)[1] <- "Intercept"
### t-- matrix transpose
### X'X
XtX.BGSgirls <- t(X.BGSgirls) %*% X.BGSgirls
round(XtXinv.BGSgirls <- solve(XtX.BGSgirls), 7)
### overhead III-53 ... estimates of least squares parameters
###(X-X_bar)'(Y-Y_bar)
cal.X.prime.cal.Y.BGSgirls <- (n.BGSgirls-1)*as.vector(cal.C.BGSgirls[1:3,4])
cal.Y.prime.cal.Y.BGSgirls <- (n.BGSgirls-1)*cal.C.BGSgirls[4,4]
round(beta.hat.star.BGSgirls <- cal.X.prime.cal.X.inv.BGSgirls %*% cal.X.prime.cal.Y.BGSgirls,5)
x.bars.y.bar.BGSgirls <- colMeans(BGSgirls[,c(7,8,9,12)])
round(x.bars.y.bar.BGSgirls[1:3],5)
round(beta.hat.0.BGSgirls <- as.vector(x.bars.y.bar.BGSgirls[4] - sum(beta.hat.star.BGSgirls*x.bars.y.bar.BGSgirls[1:3])),5)
### RSS=
round(RSS.BGSgirls <- as.vector(cal.Y.prime.cal.Y.BGSgirls - t(beta.hat.star.BGSgirls) %*% cal.X.prime.cal.X.BGSgirls %*% beta.hat.star.BGSgirls), 4)
round(sigma.hat.2.BGSgirls <- RSS.BGSgirls/(n.BGSgirls-4), 4)
round(sqrt(sigma.hat.2.BGSgirls), 4)
### let's compare above with output from R's lm function ...
lm.Soma.WT18.HT18.LG18 <- with(BGSgirls, lm(Soma ~ WT18 + HT18 + LG18))
all.equal(as.vector(coef(lm.Soma.WT18.HT18.LG18)),c(beta.hat.0.BGSgirls,beta.hat.star.BGSgirls))  # TRUE
### although not recommended, let's get least squares estimates
BGSgirls
head(BGSgirls)
rm(list=ls())
library(alr4)
BGSgirls
head(BGSgirls)
plot(x,Y)
x = BGSgirls$WT18
Y = BGSgirls$Soma
plot(x,Y)
lm.SLR = lm(Y~x)
plot(x,Y,xlab = WT18, ylab = Y)
plot(x,Y,xlab = "WT18", ylab = "Y")
lm.SLR = lm(Y~x)
abline(lm.SLR)
n=dim(BGSgirls)[1]
n
X = cbind(rep(1,n),x)
X
class(X)
t(X)
t(X)
t(X) * X
t(X) %*% X
beta = solve(t(X) %*% X) %*% t(X) %*% Y
beta
lm.SLR$coefficients
Y.fitted = X %*% beta
Y.fitted
Y.fitted
H = X %*% solve(t(X) %*% X) %*% t(X)
H
H %*% H
all.equal(H %*% H,H)
diag
diag(rep(1,n))
I = diag(rep(1,n))
(I - H) %*% (I - H)
I - H
Y.fitted2 = H %*% Y
all.equal(Y.fitted,Y.fitted2)
RSS = sum(Y - Y.fitted) / (n-2)
RSS
RSS = sum((Y - Y.fitted)^2) / (n-2)
RSS
sigma2 = RSS / (n-2)
RSS = sum((Y - Y.fitted)^2)
RSS
sigma2 = RSS / (n-2)
ESS
# calculate SST
beta.cov = solve(t(X) %*% X) * sigma
beta.cov = solve(t(X) %*% X) * sigma2
beta.cov
vcov(lm.SLR)
H %*% (1 - H)
H %*% (I - H)
x1 = BGSgirls$WT18
x2 = BGSgirls$HT18
plot(x1,x2)
Y = BGSgirls$Soma
lm.MLR2 = lm(Y ~ x1 + x2)
lm.MLR2
summary(lm.MLR2)
lm.x1 = lm(Y ~ x1)
lm.Y.x1 = lm(Y ~ x1)
lm.x1.x2 = lm(x1 ~ x2)
plot(Y,x1,xlab = "WT18", y = "soma")
lm.Y.x1 = lm(Y ~ x1)
Y = BGSgirls$Soma
plot(Y,x1,xlab = "WT18", ylab = "soma")
x1 = BGSgirls$WT18
x2 = BGSgirls$HT18
Y = BGSgirls$Soma
lm.MLR2 = lm(Y ~ x1 + x2)
summary(lm.MLR2)
plot(Y,x1,xlab = "WT18", ylab = "soma")
plot(x1,Y,xlab = "WT18", ylab = "soma")
plot(x1,Y)
abline(lm.Y.x1)
lm.x1.x2 = lm(x1 ~ x2)
plot(x2,x1,xlab = "HT18", ylab = "WT18")
par(mfrow=c(1,1))
plot(x1,Y,xlab = "WT18", ylab = "soma")
lm.Y.x1 = lm(Y ~ x1)
abline(lm.Y.x1)
lm.x1.x2 = lm(x1 ~ x2)
plot(x2,x1,xlab = "HT18", ylab = "WT18")
par(mfrow=c(2,1))
plot(x1,Y,xlab = "WT18", ylab = "soma")
lm.Y.x1 = lm(Y ~ x1)
abline(lm.Y.x1)
lm.x1.x2 = lm(x1 ~ x2)
plot(x2,x1,xlab = "HT18", ylab = "WT18")
par(mfrow=c(1,2))
plot(x1,Y,xlab = "WT18", ylab = "soma")
lm.Y.x1 = lm(Y ~ x1)
abline(lm.Y.x1)
lm.x1.x2 = lm(x1 ~ x2)
plot(x2,x1,xlab = "HT18", ylab = "WT18")
abline(lm.x1.x2)
lm(lm.Y.x1$residuals~ lm.x1.x2$residuals)
lm.x2.x1 = lm(x2 ~ x1)
plot(x1,x2,xlab = "HT18", ylab = "WT18")
abline(lm.x2.x1)
lm(lm.Y.x1$residuals~ lm.x2.x1$residuals)
